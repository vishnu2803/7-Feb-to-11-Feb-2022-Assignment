package com.company;
import java.util.*;

public class FEB11 {
    public static void main(String[] args) {
        System.out.println(Arrays.toString(maxProductOfTwoIntegers(new int[] {10,20,30,40,50})));
        System.out.println(isArrayUnique(new int[] {1,2,3,4,5,6}));
        System.out.println(permute(new int[]{5,1,2,3,4},new int[] {1,2,3,4,5},0));
        System.out.println(Arrays.toString(middle(new int[] {1,2,3,4})));
    }
    private static int[] maxProductOfTwoIntegers(int[] arr) {
        //Max product of two Integer
        Arrays.sort(arr);
        int num1,num2;
        int product1=arr[0]*arr[1];
        int product2=arr[arr.length-1]*arr[arr.length-2];
        num1=product1>product2?arr[0]:arr[arr.length-2];
        num2=product1>product2?arr[1]:arr[arr.length-1];
        return new int[] {num1,num2,num1*num2};
    }
    private static boolean isArrayUnique(int[] arr) {
      //check array is unique or not
        int temp[]=new int[arr.length+1];
        for(int i=0;i<arr.length;i++) {
            temp[arr[i]]=temp[arr[i]]+1;
        }
        for(int val:temp) {
            if(val>1)	return false;
        }
        return true;
    }
    private static int[] middle(int[] arr) {
        //write a function called middle that takes and return a new list that contains first and last element
        int temp[]=new int[arr.length-2];
        int count=0;
        for(int i=1;i<=arr.length-2;i++) {
            temp[count++]=arr[i];
        }
        return temp;
    }
    private static boolean permute(int[] array1, int[] array2, int start) {
       // Given two Int array permute them
        if(start==array2.length-1) {
            System.out.println(Arrays.toString(array2));
        }
        for(int i=start;i<array2.length;i++) {
            int temp=array2[start];
            array2[start]=array2[i];
            array2[i]=temp;
            permute(array1,array2,start+1);
            if(Arrays.toString(array1).equals(Arrays.toString(array2)))
                return true;
            array2[i]=array2[start];
            array2[start]=temp;
        }
        return false;
    }
}

